name: Check
description: Checks if build is needed
inputs:
  paths:
    required: true
    description: A newline separated list of paths to checkout. (Currently all a checked out, but only these are used for the key)
  output-path:
    required: false
    description: The path to be saved in the commit action
    default: __dummy_value__
  key-prefix:
    required: true
    description: A key prefix that must be unique amongst jobs with the same paths
  dependencies:
    description: A list of dependencies where each dependency is the outputs of this command (as JSON)
    required: false
    default: '[]'
outputs:
  key:
    description: the key that can be used as the dep-* input to this action
    value: ${{steps.gen-cache-key.outputs.key}}
  needs-build:
    description: true if the output needs building
    value: ${{ steps.check-cache.outputs.cache-hit != 'true' }}
  path:
    description: same as inputs.output-path
    value: ${{ inputs.output-path }}
  dependencies:
    description: same as inputs.dependencies
    value: ${{ inputs.dependencies }}

runs:
  using: composite
  steps:
    # Using a different version of tar from windows causes a cache miss with linux
    # https://github.com/actions/cache/issues/576#issuecomment-830796954
    - name: "Use GNU tar instead BSD tar"
      shell: cmd
      run: |
        echo C:\Program Files\Git\usr\bin>>"%GITHUB_PATH%"
      if: runner.os == 'Windows'

    # zstd 1.5.4 broke actions/toolkit https://github.com/actions/toolkit/issues/1341
    - if: runner.os == 'Windows'
      run: |
        if zstd --version | grep -q 'Zstandard CLI'; then
          choco install zstandard --version 1.5.0
          echo 'C:\ProgramData\chocolatey\bin'>>"$GITHUB_PATH"
        fi
      shell: bash
    - if: runner.os == 'Linux'
      run: |
        if zstd --version | grep -q 'Zstandard CLI'; then
          printf '#!/bin/sh\n'"$(which zstd)"' "$@" | sed "s/Zstandard CLI/zstd command line interface/g"' > "$RUNNER_TEMP/zstd"
          chmod +x "$RUNNER_TEMP/zstd"
          echo "$RUNNER_TEMP">>"$GITHUB_PATH"
        fi
      shell: bash

    # If zstd is missing a different compression method will be used
    # and cause a cache miss
    - run: which zstd
      shell: bash

    - run: echo "${{ github.action_path }}" >> $GITHUB_PATH
      shell: bash
    - name: Generate cache key
      id: gen-cache-key
      run: |
        # Assume the toJson formatting is consistent
        deps='${{ toJson(fromJson(inputs.dependencies).*.key) }}'
        mapfile -t paths < <(echo -n "${{inputs.paths}}")
        key=$(git-hash-files.sh "${paths[@]}" -- "$deps")
        echo "::set-output name=key::${{inputs.key-prefix}}-$key"
      shell: bash

    - name: Check cache
      id: check-cache
      uses: martijnhols/actions-cache/check@204c5fc6f17f75fc56021276acb5aa4b6a051d8e
      with:
        path: ${{inputs.output-path}}
        key: ${{steps.gen-cache-key.outputs.key}}

